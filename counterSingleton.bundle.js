webpackJsonp([0],{1026:function(e,n,t){var r=t(576);"string"==typeof r&&(r=[[e.i,r,""]]);t(36)(r,{});r.locals&&(e.exports=r.locals)},1027:function(e,n,t){var r=t(577);"string"==typeof r&&(r=[[e.i,r,""]]);t(36)(r,{});r.locals&&(e.exports=r.locals)},1042:function(e,n,t){e.exports=t(360)},227:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function a(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var c=t(1027),u=(t.n(c),t(4)),s=t.n(u),l=t(34),i=(t.n(l),t(90)),m=(t.n(i),t(138)),p=t.n(m),d=t(146),f=(t.n(d),t(369));t.d(n,"a",function(){return v});var h,b,y=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),E={full:t(812),import:t(813),actions:t(810),actions2:t(808),actions3:t(809),reducers:t(815),reducers2:t(814),selectors:t(817),selectors2:t(816),component:t(811)},v=(h=t.i(l.kea)({}),h(b=function(e){function n(){var e,a,c,u;r(this,n);for(var s=arguments.length,l=Array(s),m=0;m<s;m++)l[m]=arguments[m];return a=c=o(this,(e=n.__proto__||Object.getPrototypeOf(n)).call.apply(e,[this].concat(l))),c.handleRoute=function(e){var n=c.props.dispatch,r=e.target.attributes.href.value;e.preventDefault(),n(t.i(i.push)(r)),window.scrollTo(0,0)},u=a,o(c,u)}return a(n,e),y(n,[{key:"render",value:function(){return s.a.createElement("div",{className:"counter-singleton-scene"},s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"Example #1 - Counter"),"Let's start with the most basic of all examples: creating a counter that we can increment and decrement with the push of a button!",s.a.createElement("br",null),s.a.createElement("br",null),"The final result should look something like this:",s.a.createElement("div",{className:"demo"},s.a.createElement(f.a,null)),"Click the buttons to make sure it works! And then let's begin!"),s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"1. Connecting @kea"),"Everything starts with importing ",s.a.createElement("code",null,"{ kea }")," into your application:",s.a.createElement(p.a,{className:"javascript"},E.import),"... and connecting it to your React component:",s.a.createElement(p.a,{className:"javascript"},E.component)),s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"2. Actions, reducers, selectors, oh my!"),"Kea is built as a wrapper ",s.a.createElement("strong",null,"on top of")," ",s.a.createElement("a",{href:"http://redux.js.org/"},"redux"),", ",s.a.createElement("a",{href:"https://github.com/reactjs/reselect"},"reselect")," and ",s.a.createElement("a",{href:"https://redux-saga.js.org/"},"redux-saga"),".",s.a.createElement("br",null),s.a.createElement("br",null),"We strongly recommend you understand the basics of redux before continuing, as kea liberally borrows concepts from it.",s.a.createElement("h3",null,"2.1. Actions"),"The first thing we do is define our actions:",s.a.createElement(p.a,{className:"javascript"},E.actions),"An action in kea is simply a function that takes some arguments and returns a payload. In this case the functions take one argument (amount - the amount to increment with) and return a hash with it as the only key/value.",s.a.createElement("br",null),s.a.createElement("br",null),"We're using the ES6 double arrow shortand for creating functions. What we're actually doing is this:",s.a.createElement(p.a,{className:"javascript"},E.actions2),"When wrapping kea onto your component, we also create a new object, ",s.a.createElement("code",null,"this.actions"),", which automatically binds these actions to redux's ",s.a.createElement("code",null,"dispatch()")," and adds accompanying types.",s.a.createElement("br",null),s.a.createElement("br",null),"Calling ",s.a.createElement("code",null,"this.actions.increment(1)")," delegates to:",s.a.createElement(p.a,{className:"javascript"},E.actions3),s.a.createElement("h3",null,"2.2. Reducers"),"Now that we can dispatch redux actions, we need to define reducers.",s.a.createElement(p.a,{className:"javascript"},E.reducers),"If you understand redux's reducers, you should feel right at home here.",s.a.createElement("br",null),s.a.createElement("br",null),"The full definition of a reducer is something like this:",s.a.createElement(p.a,{className:"javascript"},E.reducers2),s.a.createElement("h3",null,"2.3. Selectors"),"The final piece of the puzzle is ",s.a.createElement("code",null,"selectors"),".",s.a.createElement("br",null),s.a.createElement("br",null),"Selectors (via ",s.a.createElement("a",{href:"https://github.com/reactjs/reselect"},"reselect"),") take as input other selectors and return some output. Selectors are cached and are only updated if their input changes. You should use them to run complex logic that is too costly to be run in ",s.a.createElement("code",null,"render()")," every time.",s.a.createElement("br",null),s.a.createElement("br",null),"Adding selectors gives us this final piece of code:",s.a.createElement(p.a,{className:"javascript"},E.selectors),"The selectors are defined like this:",s.a.createElement(p.a,{className:"javascript"},E.selectors2),"Note that kea automatically creates selectors for all the reducers that you have defined, so you can use them immediately as input."),s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"Final Example"),"Adding all of this together and rendering two  ",s.a.createElement("code",null,"<Counter />"),"s gives us the following result:",s.a.createElement("div",{className:"demo"},s.a.createElement(f.a,null),s.a.createElement("br",null),s.a.createElement(f.a,null)),"But you might notice that something is wrong. Incrementing one counter automatically increments the other. Is there something we can do about this?",s.a.createElement("br",null),s.a.createElement("br",null),"Yes. That's what the next example is all about: ",s.a.createElement("a",{href:"/counter-dynamic",onClick:this.handleRoute},"Dynamic counters"),s.a.createElement("h2",null,"Full source"),s.a.createElement(p.a,{className:"javascript"},E.full),s.a.createElement("a",{href:"/counter-dynamic",onClick:this.handleRoute},"Next demo")))}}]),n}(u.Component))||b)},360:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(23),o=(t.n(r),t(227));n.default=t.i(r.createScene)({name:"counterSingleton",component:o.a})},369:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function a(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var u=t(1026),s=(t.n(u),t(4)),l=t.n(s),i=t(34);t.n(i);t.d(n,"a",function(){return f});var m,p,d=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),f=(m=t.i(i.kea)({actions:function(){return{increment:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return{amount:e}},decrement:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return{amount:e}}}},reducers:function(e){var n,t=e.actions;e.key,e.props;return{counter:[0,s.PropTypes.number,(n={},c(n,t.increment,function(e,n){return e+n.amount}),c(n,t.decrement,function(e,n){return e-n.amount}),n)]}},selectors:function(e){var n=e.selectors;return{doubleCounter:[function(){return[n.counter]},function(e){return 2*e},s.PropTypes.number]}}}),m(p=function(e){function n(){return r(this,n),o(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return a(n,e),d(n,[{key:"render",value:function(){var e=this.props,n=e.counter,t=e.doubleCounter,r=this.actions,o=r.increment,a=r.decrement;return l.a.createElement("div",{className:"kea-counter"},"Count: ",n,l.a.createElement("br",null),"Doublecount: ",t,l.a.createElement("br",null),l.a.createElement("button",{onClick:function(){return o(1)}},"Increment"),l.a.createElement("button",{onClick:function(){return a(1)}},"Decrement"))}}]),n}(s.Component))||p)},379:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(23),o=(t.n(r),t(227));n.default=t.i(r.createScene)({name:"counterSingleton",component:o.a})},576:function(e,n,t){n=e.exports=t(32)(),n.push([e.i,".kea-counter {\n  margin: 0;\n}\n",""])},577:function(e,n,t){n=e.exports=t(32)(),n.push([e.i,".counter-singleton-scene {\n  // text-align: center;\n}\n",""])},808:function(e,n){e.exports="function increment (amount) {\n  if (typeof amount === 'undefined') {\n    amount = 1\n  }\n\n  const object = { amount: amount }\n  return object\n}\n"},809:function(e,n){e.exports="store.dispatch({\n  type: 'increment counter', // autogenerated unique type\n  payload: {\n    amount: 1\n  }\n})\n"},810:function(e,n){e.exports="// counter/index.js\nimport React, { Component, PropTypes } from 'react'\nimport { kea } from 'kea'\n\n@kea({\n  actions: () => ({\n    increment: (amount = 1) => ({ amount }),\n    decrement: (amount = 1) => ({ amount })\n  }),\n  // TODO: add things here\n})\nexport default class Counter extends Component {\n  render () {\n    const { increment, decrement } = this.actions\n\n    // TODO: make these work\n    const counter = 0\n    const counter = 0\n\n    return (\n      <div className='kea-counter'>\n        Count: {counter}\n        <br />\n        Doublecount: {doubleCounter}\n        <br />\n        <button onClick={() => increment(1)}>Increment</button>\n        <button onClick={() => decrement(1)}>Decrement</button>\n      </div>\n    )\n  }\n}\n"},811:function(e,n){e.exports="import React, { Component, PropTypes } from 'react'\nimport { kea } from 'kea'\n\n@kea({\n  // TODO: code goes here\n})\nexport default class Counter extends Component {\n  render () {\n    // TODO: make these work\n    const counter = 0\n    const doubleCounter = 0\n    const increment = () => {}\n    const decrement = () => {}\n\n    return (\n      <div className='kea-counter'>\n        Count: {counter}\n        <br />\n        Doublecount: {doubleCounter}\n        <br />\n        <button onClick={() => increment(1)}>Increment</button>\n        <button onClick={() => decrement(1)}>Decrement</button>\n      </div>\n    )\n  }\n}\n"},812:function(e,n){e.exports="// counter/index.js\nimport React, { Component, PropTypes } from 'react'\nimport { kea } from 'kea'\n\n@kea({\n  actions: () => ({\n    increment: (amount = 1) => ({ amount }),\n    decrement: (amount = 1) => ({ amount })\n  }),\n\n  reducers: ({ actions }) => ({\n    counter: [0, PropTypes.number, {\n      [actions.increment]: (state, payload) => state + payload.amount,\n      [actions.decrement]: (state, payload) => state - payload.amount\n    }]\n  }),\n\n  selectors: ({ selectors }) => ({\n    doubleCounter: [\n      () => [selectors.counter],\n      (counter) => counter * 2,\n      PropTypes.number\n    ]\n  })\n})\nexport default class Counter extends Component {\n  render () {\n    const { counter, doubleCounter } = this.props\n    const { increment, decrement } = this.actions\n\n    return (\n      <div className='kea-counter'>\n        Count: {counter}\n        <br />\n        Doublecount: {doubleCounter}\n        <br />\n        <button onClick={() => increment(1)}>Increment</button>\n        <button onClick={() => decrement(1)}>Decrement</button>\n      </div>\n    )\n  }\n}\n\n// index.js\nexport default class CounterSingletonScene extends Component {\n  render () {\n    return (\n      <div>\n        <Counter />\n        <Counter />\n      </div>\n    )\n  }\n}\n"},813:function(e,n){e.exports="import { kea } from 'kea'\n"},814:function(e,n){e.exports="reducers: ({ actions }) => {\n  reducerName: [defaultValue, propType, {\n    [actions.firstAction]: function (state, payload) {\n      // state - the current value of the reducer, for example: state = 0\n      // payload - the payload of the action, for example: payload = { amount: 1 }\n      // return the new state, e.g. return state + payload.amount\n    },\n    [actions.anotherAction]: function (state, payload) {\n      // it's the same story here\n    }\n  }]\n}\n"},815:function(e,n){e.exports="import React, { Component, PropTypes } from 'react'\nimport { kea } from 'kea'\n\n@kea({\n  actions: () => ({\n    increment: (amount = 1) => ({ amount }),\n    decrement: (amount = 1) => ({ amount })\n  }),\n\n  reducers: ({ actions }) => ({\n    counter: [0, PropTypes.number, {\n      [actions.increment]: (state, payload) => state + payload.amount,\n      [actions.decrement]: (state, payload) => state - payload.amount\n    }]\n  }),\n\n  // TODO: more code here?\n})\nexport default class Counter extends Component {\n  render () {\n    const { counter } = this.props\n    const { increment, decrement } = this.actions\n\n    // TODO: make this be double counter\n    const doubleCounter = 0\n\n    return (\n      <div className='kea-counter'>\n        Count: {counter}\n        <br />\n        Doublecount: {doubleCounter}\n        <br />\n        <button onClick={() => increment(1)}>Increment</button>\n        <button onClick={() => decrement(1)}>Decrement</button>\n      </div>\n    )\n  }\n}\n"},816:function(e,n){e.exports="selectors: ({ selectors }) => ({\n  // add as many as you want\n  nameOfSelector: [\n    // input selectors\n    () => [selectors.firstOtherSelector, selectors.secondOtherSelector],\n    // calculate the result\n    (firstOther, secondOther) => firstOther + secondOther,\n    // type of the result\n    PropTypes.number\n  ]\n})\n"},817:function(e,n){e.exports="import React, { Component, PropTypes } from 'react'\nimport { kea } from 'kea'\n\n@kea({\n  actions: () => ({\n    increment: (amount = 1) => ({ amount }),\n    decrement: (amount = 1) => ({ amount })\n  }),\n\n  reducers: ({ actions }) => ({\n    counter: [0, PropTypes.number, {\n      [actions.increment]: (state, payload) => state + payload.amount,\n      [actions.decrement]: (state, payload) => state - payload.amount\n    }]\n  }),\n\n  selectors: ({ selectors }) => ({\n    doubleCounter: [\n      () => [selectors.counter],\n      (counter) => counter * 2,\n      PropTypes.number\n    ]\n  })\n})\nexport default class Counter extends Component {\n  render () {\n    const { counter, doubleCounter } = this.props\n    const { increment, decrement } = this.actions\n\n    return (\n      <div className='kea-counter'>\n        Count: {counter}\n        <br />\n        Doublecount: {doubleCounter}\n        <br />\n        <button onClick={() => increment(1)}>Increment</button>\n        <button onClick={() => decrement(1)}>Decrement</button>\n      </div>\n    )\n  }\n}\n"}},[1042]);